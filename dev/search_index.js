var documenterSearchIndex = {"docs":
[{"location":"#CCallHelp.jl","page":"CCallHelp.jl","title":"CCallHelp.jl","text":"","category":"section"},{"location":"","page":"CCallHelp.jl","title":"CCallHelp.jl","text":"Documentation for CCallHelp.jl","category":"page"},{"location":"","page":"CCallHelp.jl","title":"CCallHelp.jl","text":"free_ptr","category":"page"},{"location":"#CCallHelp.free_ptr","page":"CCallHelp.jl","title":"CCallHelp.free_ptr","text":"free_ptr(ptr; free=true)\n\nFree the given ptr if not C_NULL.\n\nArguments\n\nptr the C pointer to be freed\nfree a conditional flag to prevent an if at the call site\n\n\n\n\n\n","category":"function"},{"location":"","page":"CCallHelp.jl","title":"CCallHelp.jl","text":"string_from_ptr","category":"page"},{"location":"#CCallHelp.string_from_ptr","page":"CCallHelp.jl","title":"CCallHelp.string_from_ptr","text":"string_from_ptr(ptr::Ptr{Cuchar}; free=true)\n\nCreate a Julia String from a memory location a byte at a time.\n\nArguments\n\nptr pointer to use\nfree flag to determine if the memory should be freed once copied\n\n\n\n\n\n","category":"function"},{"location":"","page":"CCallHelp.jl","title":"CCallHelp.jl","text":"vec_string_from_ptr","category":"page"},{"location":"#CCallHelp.vec_string_from_ptr","page":"CCallHelp.jl","title":"CCallHelp.vec_string_from_ptr","text":"vec_string_from_ptr(ptr_ptr_uchar; free=true)\n\nCreate a Vector{String} from the supplied list of uchar*\n\nArguments\n\nptr the pointer to the list\nfree flag to determine if the memory of both the strings and the list should be freed once copied\n\n\n\n\n\n","category":"function"}]
}
